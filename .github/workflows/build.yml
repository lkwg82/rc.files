name: build
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /home/linuxbrew
          key: ${{ runner.os }}-brew
          restore-keys: |
            ${{ runner.os }}-brew
      # Homebrew
      - name: homebrew installation
        run:  if [ ! -d /home/linuxbrew ]; then bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" -y; fi
      - name: set PATH
        run: export PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH
      - name: homebrew update
        run:  brew update
      - name: homebrew outdated
        run: brew outdated
      - name: homebrew upgrade
        run: brew upgrade
      - name: homebrew installation
        run: brew install pre-commit
      # pre-commit
#      - name: run pre-commit
#        run: pre-commit run --verbose --all
#      - uses: actions/cache@v2
#        with:
#          path: ${{ steps.yarn-cache.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn
#      - name: Install Packages
#        run: yarn install
#      - name: build production
#        run: yarn build
#      - name: upload build
#        uses: actions/upload-artifact@v2
#        with:
#          name: build
#          path: build
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/master'
#    steps:
#      - name: Download a single artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: build
#      - name: Deploy
#        uses: crazy-max/ghaction-github-pages@v2
#        with:
#          target_branch: gh-pages
#          build_dir: .
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}